# Вычислить сумму заданного бесконечного ряда с точностью эпсилон
# Вывести таблицу промежуточных значений с заданным шагом печати
# Ввести значение переменной, точность, шаг печати, максимальное число итераций
# Программа сделана Динь Вьет Ань, ИУ7-14Б

from math import factorial, fabs

x = float(input('Введите значение переменой x: '))
while round(x, 3) == 0:
    x = float(input('Введите значение переменой x снова: '))
eps = float(input('Введите точность: '))
step = int(input('Введите шаг печати: '))
N = int(input('Введите максимальное число итераций: '))

print('\nБесконечный ряд: (-1)^n * (2*x)^(2*n)/(2*n)!')
print('Таблицу промежуточных значений с заданным шагом печати: ')

print(chr(9484) + '-' * 68 + chr(9488))
print('|', '{:^10s}'.format('N'),
      '|', '{:^25s}'.format('t'),
      '|', '{:^25s}'.format('s'), '|')
print(chr(9500) + '-' * 68 + chr(9508))

n = 1
t = s = x/2
while n < N and fabs(t) >= eps:
    if n % step == 1 or step == 1:
        print('|', '{:^10g}'.format(n),
              '|', '{:^25.7g}'.format(t),
              '|', '{:^25.7g}'.format(s), '|')
    n += 1
    t = (-1)**n * (2*x)**(2*n)/factorial(2*n)
    s += t

if n % step != 1 and step != 1:
    print('|', '{:^10g}'.format(n),
          '|', '{:^25.7g}'.format(t),
          '|', '{:^25.7g}'.format(s), '|')
print(chr(9492) + '-' * 68 + chr(9496))
